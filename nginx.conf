server {
    listen 443 ssl;
    server_name tailfriends.kro.kr;

    ssl_certificate /etc/letsencrypt/live/tailfriends.kro.kr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/tailfriends.kro.kr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # 1. 소셜 로그인 요청
    location ^~ /api/oauth2/authorization/ {
        proxy_pass http://tailfriends-back-service:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_intercept_errors off;
        proxy_redirect off;
    }

    # 2. API 요청
    location /api/ {
        proxy_pass http://tailfriends-back-service:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_intercept_errors off;
        proxy_redirect off;
    }

    # 3. 정적 리소스 (js/css/img 같은 파일은 직접 매칭)
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|webmanifest|json)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public";
    }

    # 4. Service Worker (PWA)
    location /registerSW.js {
        root /usr/share/nginx/html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    location /manifest.webmanifest {
        root /usr/share/nginx/html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # 5. 나머지 모든 요청은 SPA
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
}
